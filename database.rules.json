{
  "rules": {
    ".read": "false",
    ".write": "false",
    "polymons": {
      ".read": "true"
    },
    "references": {
      "$reference": {
        ".read": "auth != null"
      }
    },
    "users": {
      "$userId": {
        ".read": "auth != null && $userId === auth.uid",
        "player": {
          "activeBattleId": {}
        },
        "team": {
          ".write": "$userId === auth.uid",
          "$teamPosition": {
            ".validate": "newData.child('index').val() < 5 && newData.child('index').val() > -1 && newData.hasChild('polydexId')"
          }
        },
        "polydex": {},
        "achievements": {},
        "catchQueue": {
          ".write": "$userId === auth.uid"
        },
        "battleQueue": {
          ".write": "$userId === auth.uid"
        }
      }
    },
    "battles": {
      "$battle": {

        "createdAt": {},
        "startedAt": {},
        "finishedAt": {},

        "initiatingUserId": {},
        "defendingUserId": {},

        "currentRound": {},
        "maxRounds": {},

        "state": {
          "$userId": {
            ".validate": "$userId === data.parent().parent().child('initiatingUserId').val() || $userId === data.parent().parent().child('defendingUserId').val()",
            "heartbeat": {
              ".validate": "newData.isNumber() && newData.val() <= now && (!data.exists() || newData.val() > data.val())"
            },
            "moves": {
              "$move": {
                "round": {},
                "polydexId": {
                  ".validate": "root.child('users').child($userId).child('polydex').child(data.val()).exists()"
                },
                "attributeName": {
                  ".validate": "newData.isString() && newData.val().matches(/^(attack|defend|counter)$/)"
                }
              }
            }
          }
        },

        "status": {

          ".read": "auth.uid === root.child('battles').child($battle).child('initiatingUserId').val() || auth.uid === root.child('battles').child($battle).child('defendingUserId').val()",

          "engaged": {},

          "rounds": {
            "$round": {
              "$user": {
                "index": {},
                "polydexId": {},
                "attributeName": {},
                "randomModifier": {},
                "damageDelta": {}
              }
            }
          },

          "winningUserId": {}
        }
      }
    }
  }
}
